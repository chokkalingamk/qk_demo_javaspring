# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and deploy to Azure Kubernetes Service

env:
  AZURE_CONTAINER_REGISTRY: ecrinsights # set this to the name of your container registry
  PROJECT_NAME: qkinsightsjava              # set this to your project's name
  RESOURCE_GROUP: App_insights_AKS_ck          # set this to the resource group containing your AKS cluster
  CLUSTER_NAME: appinsightsaks              # set this to the name of your AKS cluster
  ACR_REGISTRY_URL: ecrinsights.azurecr.io              # set this to the URL of your registry
  CHART_PATH: "./javasampleapp"
  CHART_OVERRIDE_PATH: "./javasampleapp/values.yaml"
#   # If you bake using helm:
#   CHART_PATH: MY_HELM_FILE                   # set this to the path to your helm file
#   CHART_OVERRIDE_PATH: MY_OVERRIDE_FILES     # set this to an array of override file paths

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3

#     # - name: Azure Login
#     #   uses: azure/login@89d153571fe9a34ed70fcf9f1d95ab8debea7a73
#     #   with:
#     #     creds: ${{ secrets.AZURE_CREDENTIALS }}
#     - uses: Azure/login@v1
#         with:
#           creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
jobs: 
  Build_and_Deploy:
    runs-on: ubuntu-latest
    steps:
    # - name: 'Az CLI login'
    #   uses: azure/login@v1
    #   with:
    #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: github checkout
      uses: actions/checkout@v3
  
    - uses: Azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

    # - name: 'Run Azure CLI commands'
    #   run: |
    #       az account show
    #       az group list
    #       pwd 
      # Builds and pushes an image up to your Azure Container Registry

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file



    # - name: Group of log lines
    #   run: |
    #       ll
  # build-Application:
  #   if: ${{ always() }}
  #   needs: login
  #   runs-on: ubuntu-latest
  #   steps:
      # Runs Helm to create manifest files

    
    - uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push image to ACR
      run: |
          docker build . -t ${{ env.ACR_REGISTRY_URL }}/qkjavaappdemo:${{ github.sha }} -t ${{ env.ACR_REGISTRY_URL }}/qkjavaappdemo:latest
          #docker push ${{ env.ACR_REGISTRY_URL }}/qkjavaappdemo:${{ github.sha }}
          docker push ${{ env.ACR_REGISTRY_URL }}/qkjavaappdemo --all-tags

      #  - uses: Azure/k8s-set-context@v1
      #    with:
      #       kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Get K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}

    - name: Lint Check
      run: helm lint ./javasampleapp
    # - name: Lint Helm
    #   uses: WyriHaximus/github-action-helm3@v2
    #   with:
    #     exec: helm lint ./.helm/sampleapp/

    # - name: Lint Helm charts
    #   uses: helm/chart-testing-action@v1.0.0
    #   with:
    #     command: lint
        # config: ct.yaml
    # - name: delete old secret
    #   run: kubectl delete secret qkappdemo-secret

    - name: Set imagePullSecret
      uses: azure/k8s-create-secret@v4
      with:
        container-registry-url: ${{ env.ACR_REGISTRY_URL }}
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: 'qkjavaappdemo-secret'
      # id: create-secret

    - name: App_insights_docker deployment
      uses: azure/k8s-bake@v2
      with:
        renderEngine: "helm"
        helmChart: ${{ env.CHART_PATH }}
        overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
        overrides: |
          replicas:1
        helm-version: "latest"
      id: bake

    - uses: Azure/k8s-deploy@v1.2
      with:
        action: deploy
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
            ${{ env.ACR_REGISTRY_URL }}/qkjavaappdemo:${{ github.sha }}
        imagepullsecrets: |
            qkjavaappdemo-secret
  # Deploy-Application:
  #   if: ${{ always() }}
  #   needs: [login, build-Application]
  #   runs-on: ubuntu-latest
  #   steps:
    # # Deploys application based on manifest files from previous step
    # - name: Deploy application
    #   uses: Azure/k8s-deploy@v4
    #   with:
    #     action: deploy
    #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
    #     images: |
    #       ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
    # - name: Build and push image to ACR
    #   run: |
    #     az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

    
    # - name: Gets K8s context
    #   uses: azure/aks-set-context@4e5aec273183a197b181314721843e047123d9fa
    #   with:
    #       creds: ${{ secrets.AZURE_CREDENTIALS }}
    #       resource-group: ${{ env.RESOURCE_GROUP }}
    #       cluster-name: ${{ env.CLUSTER_NAME }}
    #   id: login

    # - name: Configure deployment
    #   uses: azure/k8s-bake@773b6144a3732e3bf4c78b146a0bb9617b2e016b
    #   with:
    #     renderEngine: 'helm'
    #     helmChart: ${{ env.CHART_PATH }}
    #     overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
    #     overrides: |     
    #       replicas:2
    #     helm-version: 'latest' 
    #   id: bake

    # - name: Deploys application
    # - uses: Azure/k8s-deploy@c8fbd76ededaad2799c054a9fd5d0fa5d4e9aee4
    #   with:
    #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
    #     images: |
    #       ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.PROJECT_NAME }}:${{ github.sha }}
    #     imagepullsecrets: |
    #       ${{ env.PROJECT_NAME }}
